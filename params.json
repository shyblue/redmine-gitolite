{"name":"Redmine Gitolite","tagline":"","body":"redmine-gitolite\r\n================\r\n\r\nCURRENT HEAD VERSION WORKS WITH TRUNK REDMINE (certified with 2.2.3)\r\n\r\nTHIS PLUGIN IS COMPATIBLE WITH REDMINE 2.X ONLY !\r\n\r\nIt combines `redmine-gitolite`__ with `redmine_git_hosting`__\r\n\r\nA Redmine plugin which manages your Gitolite configuration based on your projects and user memberships in Redmine.\r\n\r\n__ https://github.com/ivyl/redmine-gitolite\r\n__ https://github.com/ericpaulbishop/redmine_git_hosting\r\n\r\n\r\nGems\r\n----\r\n* net-ssh\r\n* lockfile\r\n* `gitolite`__ (works with 1.1.0)\r\n\r\n__ https://github.com/wingrunr21/gitolite\r\n\r\nOther\r\n-----\r\n* Gitolite server (works with v2.3.1 and v3.3)\r\n* accessible Git executable (works with 1.7.2.5)\r\n* curl\r\n\r\nSetup\r\n-----\r\n\r\n1. Install Redmine and put this plugin in redmine/plugins directory and migrate database (plugins)\r\n\r\n.. code:: ruby\r\n\r\n    $ cd redmine/plugins\r\n    $ git clone git://github.com/pitit-atchoum/redmine-gitolite.git redmine_gitolite\r\n    $ cd ..\r\n    $ RAILS_ENV=production rake db:migrate_plugins\r\n\r\n\r\n2. Create SSH Keys for user running Redmine\r\n\r\n.. code:: ruby\r\n\r\n    $ sudo su - redmine\r\n    $ ssh-keygen -N '' -f ~/.ssh/redmine_gitolite_admin_id_rsa\r\n\r\n3. User running Redmine must have RW+ access to gitolite-admin (assuming that you have Gitolite installed).\r\n\r\n4. Make sure that Redmine user has Gitolite server in his known_hosts list (This is also a good check to see if Gitolite works)\r\n\r\n.. code:: ruby\r\n\r\n  $ sudo su - redmine\r\n  $ ssh git@localhost\r\n  * [accept key]\r\n\r\nYou should get something like that :\r\n\r\n.. code:: ruby\r\n\r\n    hello redmine_redmine, this is gitolite v2.3.1-0-g912a8bd-dt running on git 1.7.2.5\r\n    the gitolite config gives you the following access:\r\n        R   W  gitolite-admin\r\n        @R_ @W_ testing\r\n\r\nOr\r\n\r\n.. code:: ruby\r\n\r\n    hello redmine_gitolite_admin_id_rsa, this is git@dev running gitolite3 v3.3-11-ga1aba93 on git 1.7.2.5\r\n        R W  gitolite-admin\r\n        R W  testing\r\n\r\n5. Configure email and name of git user for your redmine account\r\n\r\n.. code:: ruby\r\n\r\n    $ sudo su - redmine\r\n    $ git config --global user.email \"redmine@gitolite.org\"\r\n    $ git config --global user.name \"Redmine Gitolite\"\r\n\r\n6. Add post-receive hook to common Gitolite hooks (script is in contrib dir) and configure it (Redmine Host and API key)\r\n\r\n.. code:: ruby\r\n\r\n    $ sudo su - gitolite #login on gitolite user\r\n    $ cat > .gitolite/hooks/common/post-receive\r\n    * [paste hook]\r\n    $ vim .gitolite/hooks/common/post-receive\r\n    * [enable WS for repository management in administration->settings->repositories]\r\n    * [copy generated API key] (DEFAULT_REDMINE_KEY)\r\n    * [set Redmine server URL] (DEFAULT_REDMINE_SERVER)\r\n    $ chmod +x .gitolite/hooks/common/post-receive\r\n    $ vim .gitolite.rc\r\n    * [add \".*\" to the GL_GIT_CONFIG_KEYS setting\r\n    * [ set $REPO_UMASK = 0022; ]\r\n    $ gl-setup\r\n\r\n7. Configure plugin in Redmine settings\r\n\r\n.. code:: ruby\r\n\r\n    * [Adminitration -> Plugins -> Redmine Gitolite]\r\n    * [Gitolite URL should be set to your gitolite-admin git repository]\r\n    * [Base path should point to the Gitolite directory which will hold local copies (must exist, example : /home/gitolite/repositories)\r\n    * [Set developer and ro urls as in given examples (just slightly modify them)]\r\n      [%{name} will be replaced with your repository identifier]\r\n\r\nFound a bug?\r\n------------\r\n\r\nOpen new issue and complain. You can also fix it and sent pull request.\r\nThis plugin is in active usage in current, edge Redmine. Any suggestions are welcome.\r\n","google":"UA-36504891-3","note":"Don't delete this file! It's used internally to help with page regeneration."}